{"version":3,"sources":["components/Loading.js","components/UserDetailModal.js","components/User.js","components/UsersList.js","components/Search.js","utils.js","components/App.js","components/NotFound.js","components/Settings.js","components/Router.js","serviceWorker.js","index.js"],"names":["Loading","react_default","a","createElement","className","Component","UserDetailModal","hideUserDetails","event","user_email","currentTarget","getAttribute","document","getElementById","classList","add","_this$props$details","this","props","details","picture","name","login","email","location","cell","phone","full_name","first","last","id","src","large","alt","username","street","postcode","city","state","onClick","data-value","User","showUserDetail","remove","components_UserDetailModal","UsersList","_this","Object","keys","list","map","key","components_User","index","Search","filterSearch","search_value","value","toLowerCase","users","querySelectorAll","user_wrapper","forEach","user","innerText","indexOf","style","type","placeholder","onChange","getRandomUsers","params","url","axios","get","App","isLoading","requestSent","endUsersRequest","requestUsers","_this2","then","response","data","results","new_users","concat","setState","setTimeout","bind","wrapper","querySelector","scrollTop","scrollHeight","clientHeight","window","innerHeight","Math","ceil","length","sendUsersRequest","components_Loading","onScroll","handleScroll","components_Search","Link","to","components_UsersList","NotFound","Settings","nationalities","checked","preventDefault","handleCheckbox","target","nat","splice","Router","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","components_Router","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b99088e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className='loading-wrapper'>\r\n        <div className='loading-msg'>loading</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\n\r\nclass UserDetailModal extends Component {\r\n  hideUserDetails = event => {\r\n    const user_email = event.currentTarget.getAttribute('data-value');\r\n    const user_detail = document.getElementById('user_' + user_email);\r\n    user_detail.classList.add('hidden');\r\n  };\r\n  render() {\r\n    const {\r\n      picture,\r\n      name,\r\n      login,\r\n      email,\r\n      location,\r\n      cell,\r\n      phone\r\n    } = this.props.details;\r\n    const full_name = name.first + ' ' + name.last;\r\n    return (\r\n      <div className='user-info-modal hidden' id={'user_' + email}>\r\n        <div className='user-info-modal-main'>\r\n          <img src={picture.large} alt={full_name} />\r\n          <div className='user-info-details'>\r\n            <p className='name'>\r\n              <span>name: </span>\r\n              {full_name}\r\n            </p>\r\n            <p className='username'>\r\n              <span>username:</span>\r\n              {login.username}\r\n            </p>\r\n            <p className='email'>\r\n              <span>email:</span>\r\n              {email}\r\n            </p>\r\n            <div className='user-info-misc'>\r\n              <p className='location'>\r\n                <span>street:</span>\r\n                {location.street}\r\n              </p>\r\n              <p className='location'>\r\n                <span>city:</span>\r\n                {location.postcode} {location.city}\r\n              </p>\r\n              <p className='location'>\r\n                <span>state:</span>\r\n                {location.state}\r\n              </p>\r\n              <p className='phone'>\r\n                <span>phone number:</span>\r\n                {phone}\r\n              </p>\r\n              <p className='cell'>\r\n                <span>cell number:</span>\r\n                {cell}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className='user-info-actions'\r\n            onClick={this.hideUserDetails}\r\n            data-value={email}\r\n          >\r\n            <span className='user-info-btn'>x</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetailModal;\r\n","import React, { Component } from 'react';\r\nimport UserDetailModal from './UserDetailModal';\r\n\r\nclass User extends Component {\r\n  showUserDetail = event => {\r\n    const user_email = event.currentTarget.getAttribute('data-value');\r\n    const user_detail = document.getElementById('user_' + user_email);\r\n    user_detail.classList.remove('hidden');\r\n  };\r\n\r\n  render() {\r\n    const { picture, name, login, email } = this.props.details;\r\n    const full_name = name.first + ' ' + name.last;\r\n    return (\r\n      <div className='user-info-card'>\r\n        <img src={picture.large} alt={full_name} />\r\n        <div className='user-info-details'>\r\n          <p className='name js-full-name'>{full_name}</p>\r\n          <p className='username'>{login.username}</p>\r\n          <p className='email'>{email}</p>\r\n          <div\r\n            className='user-info-actions'\r\n            onClick={this.showUserDetail}\r\n            data-value={email}\r\n          >\r\n            <span>+</span>\r\n          </div>\r\n        </div>\r\n        <UserDetailModal details={this.props.details} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from 'react';\r\nimport User from './User';\r\n\r\nclass UsersList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className='users'>\r\n        {Object.keys(this.props.list).map(key => (\r\n          <User key={key} index={key} details={this.props.list[key]} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  filterSearch = event => {\r\n    const search_value = event.currentTarget.value.toLowerCase();\r\n    const users = document.querySelectorAll('.js-full-name');\r\n    const user_wrapper = document.querySelectorAll('.user-info-card');\r\n    user_wrapper.forEach(function(user, index) {\r\n      if (users[index].innerText.toLowerCase().indexOf(search_value) >= 0) {\r\n        user_wrapper[index].style['display'] = 'block';\r\n      } else {\r\n        user_wrapper[index].style['display'] = 'none';\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='search-wrapper'>\r\n        <input\r\n          type='text'\r\n          className='search'\r\n          placeholder='Search for a user'\r\n          onChange={this.filterSearch}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import axios from 'axios';\r\n\r\nexport function getRandomUsers(params) {\r\n  let url;\r\n  if (params) {\r\n    url = 'https://randomuser.me/api/?results=50&nat=' + params;\r\n  } else {\r\n    url = 'https://randomuser.me/api/?results=50';\r\n  }\r\n  return axios.get(url);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Loading from './Loading';\r\nimport UsersList from './UsersList';\r\nimport Search from './Search';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRandomUsers } from '../utils';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    users: [],\r\n    isLoading: true,\r\n    requestSent: true,\r\n    endUsersRequest: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.requestUsers();\r\n  }\r\n\r\n  requestUsers() {\r\n    getRandomUsers().then(response => {\r\n      const users = response.data.results;\r\n      const new_users = this.state.users.concat(users);\r\n      this.setState({\r\n        users: new_users,\r\n        isLoading: false,\r\n        requestSent: false\r\n      });\r\n    });\r\n  }\r\n\r\n  sendUsersRequest() {\r\n    if (this.state.requestSent) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ requestSent: true });\r\n\r\n    // enumerate a slow query\r\n    setTimeout(this.requestUsers.bind(this), 2000);\r\n  }\r\n\r\n  handleScroll() {\r\n    const max_users = 1000;\r\n    const wrapper = document.querySelector('.wrapper');\r\n    const scrollTop = wrapper && wrapper.scrollTop;\r\n    const scrollHeight = wrapper && wrapper.scrollHeight;\r\n    const clientHeight = window.innerHeight;\r\n    const scrolledToBottom =\r\n      Math.ceil(scrollTop + clientHeight) >= scrollHeight;\r\n    if (scrolledToBottom) {\r\n      if (this.state.users.length === max_users) {\r\n        // show end of catalogue\r\n        this.setState({ endUsersRequest: true });\r\n      } else {\r\n        // request the next 50 batch of users\r\n        this.sendUsersRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div className='wrapper' onScroll={this.handleScroll.bind(this)}>\r\n        <Search users={this.state.users} />\r\n        <Link to='/settings' className='settings-link'>\r\n          Settings\r\n        </Link>\r\n        <div className='users-wrapper'>\r\n          <UsersList list={this.state.users} />\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.requestSent\r\n              ? 'loading-users show'\r\n              : 'loading-users hidden'\r\n          }\r\n        >\r\n          loading\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.endUsersRequest ? 'end-users show' : 'end-users hidden'\r\n          }\r\n        >\r\n          end of users catalog\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className='not-found'>\r\n    <h2>Not Found!</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRandomUsers } from '../utils';\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    nationalities: ['ch', 'es', 'fr', 'gb'],\r\n    checked: []\r\n  };\r\n\r\n  onClick = event => {\r\n    event.preventDefault();\r\n    const choices = this.state.checked;\r\n    getRandomUsers(choices);\r\n  };\r\n\r\n  handleCheckbox = event => {\r\n    const target = event.currentTarget;\r\n    const nat = target.getAttribute('value');\r\n    if (target.checked) {\r\n      this.setState({ checked: this.state.checked.concat(nat) });\r\n    } else {\r\n      let checked = this.state.checked;\r\n      const index = checked.indexOf(nat);\r\n      if (index > -1) {\r\n        checked.splice(index, 1);\r\n      }\r\n      this.setState({ checked });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='nav'>\r\n          <Link to='/'>Back</Link>\r\n        </div>\r\n        <div className='settings-wrapper'>\r\n          <p>Settings</p>\r\n          <div className='choices-wrapper'>\r\n            {Object.keys(this.state.nationalities).map(key => (\r\n              <label key={key}>\r\n                <input\r\n                  type='checkbox'\r\n                  key={key}\r\n                  value={this.state.nationalities[key]}\r\n                  onChange={this.handleCheckbox}\r\n                />\r\n                {this.state.nationalities[key]}\r\n              </label>\r\n            ))}\r\n          </div>\r\n          <button type='submit' onClick={this.onClick}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\nimport Settings from './Settings';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/' component={App} />\r\n      <Route path='/settings' component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}